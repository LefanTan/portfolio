{"version":3,"sources":["components/Hooks.tsx","components/AboutMe.tsx","components/Block.tsx","assets/profilepic.png","components/StartPage.tsx","App.tsx","index.tsx"],"names":["useScrollListener","el","callback","handler","useCallback","window","requestAnimationFrame","setTimeout","console","error","elRect","getBoundingClientRect","left","right","innerWidth","isElementInViewporHorizontal","useEffect","document","querySelector","addEventListener","removeEventListener","AboutMe","memo","className","useState","mainDom","setMainDode","setTransState","refHandler","node","scrollIntoView","isIn","id","ref","motion","div","animate","x","rotate","transition","type","duration","bounce","repeat","Infinity","Block","children","StartPage","setMainDom","transitionState","slideRightVal","useSpring","resume","contact","setSlide","bgRef","useSpringRef","from","blueBg","whiteBg","zIndex","config","mass","friction","reset","reverse","slideOutRef","slideOutProps","clipPath","popOutRef","popOutProps","useChain","style","background","isMobile","getComputedStyle","body","getPropertyValue","transform","img","src","profilePic","alt","href","target","rel","onMouseLeave","onMouseEnter","button","onClick","getElementById","behavior","directToPage","App","mainRef","useRef","prevDeltaX","onWheel","e","scrollPosition","current","scrollLeft","deltaX","scrollTo","top","deltaY","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6389dffe.chunk.js","sourcesContent":["import { useCallback, useEffect } from \"react\"\n\nexport function isElementInViewporHorizontal(el : HTMLInputElement | null) : boolean { \n    if(el === null){\n        console.error(`el param is null`)\n        return false\n    }\n    \n    var elRect = el.getBoundingClientRect()\n    return(\n        ((elRect.left <= 0 && elRect.right >= window.innerWidth / 2 && elRect.left >= -window.innerWidth / 2) ||\n         (elRect.left > 0 && elRect.right <= window.innerWidth + window.innerWidth / 2 && elRect.left <= window.innerWidth / 2))\n    )\n}\n\nexport function useScrollListener(el: HTMLInputElement | null, callback : (inElement : boolean) => void) {\n    const handler = useCallback(() => {\n        var scrollCallback = window.requestAnimationFrame || function(callback) {setTimeout(callback, 2000/60)}\n        scrollCallback(() => {\n            // console.log(\"Left \" + el?.getBoundingClientRect().left)\n            // console.log(\"RIGHT \" + el?.getBoundingClientRect().right)\n            return callback(isElementInViewporHorizontal(el))\n        })\n    }, [callback, el])\n\n    useEffect(() => {\n        document.querySelector('main')?.addEventListener('scroll', handler)\n        return(() => {\n            document.querySelector('main')?.removeEventListener('scroll', handler)\n        })\n    }, [handler, el])\n}","import { motion } from \"framer-motion\";\nimport { useCallback, useState } from \"react\";\nimport { memo } from \"react\";\nimport { useScrollListener } from \"./Hooks\";\nimport { BasicProp } from \"./Interfaces\";\n\nexport const AboutMe = memo(({ className }: BasicProp) => {\n\n    const [mainDom, setMainDode] = useState<HTMLInputElement | null>(null)\n    const [transition, setTransState] = useState(false)\n\n    const refHandler = useCallback((node: HTMLInputElement) => {\n        if (node !== null) { \n            node.scrollIntoView()\n            setMainDode (node)\n        }\n    }, [])\n\n    useScrollListener(mainDom, (isIn) => setTransState(isIn))\n\n    // const deepBlueBg = useSpring({\n    //     background: `linear-gradient(${isMobile ? '30deg' : '60deg'}, ${getComputedStyle(document.body).getPropertyValue('--deep-blue-shade')} 50%, transparent 50%)`,\n    //     from: { transform: `translateX(-18%)` },\n    //     transform: `translateX(-10%)`,\n    //     config: { mass: 2, friction: 60 },\n    //     zIndex: 20,\n    //     reset: true,\n    //     reverse: !transition\n    // })\n    \n    // const redBg = useSpring({\n    //     background: `linear-gradient(-20deg, ${getComputedStyle(document.body).getPropertyValue('--red')} 50%, transparent 50%)`,\n    //     from: { transform: `translateX(40%)` },\n    //     transform: `translateX(20%)`,\n    //     config: { mass: 2, friction: 60 },\n    //     zIndex: 20,\n    //     reset: true,\n    //     reverse: !transition\n    // })\n\n    return (\n        <div id=\"aboutme\" ref={refHandler} className={`${className} bg-transparent`}>\n            <div className=\"bg-transparent w-screen h-screen flex justify-center items-center overflow-hidden relative\">\n                <motion.div className=\"bg-red w-24 h-24\" animate={{x: 500, rotate : 360}} transition={{ type:\"spring\", duration: 3, bounce: 0.7, repeat: Infinity }}/>\n                {/* <div className=\"absolute top-0 bottom-0 -left-1/2 -right-1/2 drop-shadow-lg\" />\n                <div className=\"absolute top-0 bottom-0 -left-1/2 -right-1/2 drop-shadow-lg\" /> */}\n                <div className=\"w-screen flex justify-center items-center z-50\">\n                    \n                </div>\n            </div>\n        </div>\n    )\n})","import React from \"react\"\nimport { memo } from \"react\"\nimport { BasicProp } from \"./Interfaces\"\n\nexport const Block = memo(({children, className} : BasicProp) => {\n    return(\n        <div className={`${className} bg-transparent w-10/12 h-fit lg:w-2/5 lg:h-2/5 m-3`}>\n          {children}\n        </div>\n    )\n})","export default __webpack_public_path__ + \"static/media/profilepic.788c63e5.png\";","import { Block } from \"./Block\";\nimport { HiMail } from \"react-icons/hi\";\nimport { AiTwotonePhone, AiOutlineGithub } from \"react-icons/ai\";\nimport { RiLinkedinFill } from \"react-icons/ri\";\nimport { BsArrowRightShort } from \"react-icons/bs\";\nimport profilePic from \"../assets/profilepic.png\";\nimport { isMobile } from \"react-device-detect\";\nimport { BasicProp } from \"./Interfaces\";\nimport { useSpring, animated, useChain, useSpringRef } from \"react-spring\";\nimport { memo, useCallback, useState } from \"react\";\nimport { useScrollListener } from \"./Hooks\";\nimport { motion } from \"framer-motion\";\n\n/* REACT SPRING BASED */\nexport const StartPage = memo(({ className }: BasicProp) => {\n\n    const directToPage = (id: string) => {\n        document.getElementById(id)?.scrollIntoView({ behavior: \"smooth\" })\n    }\n\n    const [mainDom, setMainDom] = useState<HTMLInputElement | null>(null)\n    // True means start transition\n    const [transitionState, setTransState] = useState(true)\n\n    // Calls when ref of highest level div changes, so we can pass in the node to useScrollListener\n    const refHandler = useCallback((node: HTMLInputElement) => {\n        if (node !== null) {\n            setMainDom(node)\n        }\n    }, [])\n\n    useScrollListener(mainDom, (isIn) => setTransState(isIn))\n\n    const slideRightVal = -120\n    const [{resume, contact}, setSlide] = useSpring(() => ({\n        resume: slideRightVal,\n        contact: slideRightVal\n    }))\n\n    const bgRef = useSpringRef()\n    const { blueBg, whiteBg } = useSpring({\n        ref: bgRef,\n        from: { blueBg: `translateX(55%)`, whiteBg: `translateX(-10%)` },\n        whiteBg: `translateX(-20%)`,\n        blueBg: `translateX(40%)`,\n        zIndex: 20,\n        config: { mass: 1, friction: 60 },\n        reset: true,\n        reverse: !transitionState\n    })\n\n    const slideOutRef = useSpringRef()\n    const slideOutProps = useSpring({\n        ref: slideOutRef,\n        from: {\n            clipPath: `inset(0% 100% 0% 0%)`,\n        },\n        clipPath: `inset(0% 0% 0% 0%)`,\n        reset: true,\n        reverse: !transitionState\n    })\n\n    const popOutRef = useSpringRef()\n    const popOutProps = useSpring({\n        ref: popOutRef,\n        from: {\n            clipPath: 'circle(0% at 50% 50%)'\n        },\n        clipPath: 'circle(100% at 50% 50%)',\n        reset: true,\n        reverse: !transitionState\n    })\n\n    useChain([slideOutRef, popOutRef, bgRef], [0, 0.5, 1])\n\n    return (\n        // Start Scene\n        <div id=\"startpage\" ref={refHandler} className={`${className}`}>\n            <div className=\"bg-transparent w-screen h-screen flex justify-center items-center overflow-hidden relative\">\n                <animated.div style={\n                    {\n                        background: `linear-gradient(${isMobile ? '-30deg' : '-60deg'} , ${getComputedStyle(document.body).getPropertyValue('--deep-blue-shade')} 50%, ${getComputedStyle(document.body).getPropertyValue('--deep-blue')} 50%)`,\n                        left: `-200%`,\n                        transform: blueBg\n                    }}\n                    className=\"absolute top-0 bottom-0 right-0\" />\n                <animated.div style={\n                    {\n                        background: `linear-gradient(20deg, ${getComputedStyle(document.body).getPropertyValue('--deep-blue-shade2x')} 50%, transparent 50%)`,\n                        transform: whiteBg\n                    }}\n                    className=\"absolute top-0 bottom-0 -left-1/2 -right-1/2\" />\n                <div className=\"bg-transparent w-full h-full lg:w-4/6 p-5 pt-16 pb-16 flex flex-wrap justify-center items-center overflow-hidden z-50\">\n                    {isMobile && (\n                        <Block className=\"bg-transparent shadow-none flex justify-center items-center\">\n                            <animated.img\n                                src={profilePic}\n                                alt=\"Profile Pic\"\n                                className=\"p-8 filter drop-shadow-md\"\n                                style={popOutProps}\n                            />\n                        </Block>\n                    )}\n                    <Block>\n                        <animated.div style={slideOutProps} className=\"bg-red w-full h-full flex flex-col p-4 pl-5 pr-5 shadow-xl\">\n                            <h1 className=\"small-light-text text-2xl mb-2\">\n                                Lefan Tan (Jia Hui)\n                            </h1>\n                            <h2 className=\"small-light-text font-bold\">Front-end Developer</h2>\n                            <div className=\"flex items-center\">\n                                <HiMail className=\"text-off-white mr-2\" />\n                                <p className=\"small-light-text\">lefantan@hotmail.com</p>\n                            </div>\n                            <div className=\"flex items-center\">\n                                <AiTwotonePhone className=\"text-off-white mr-2\" />\n                                <p className=\"small-light-text\">780-604-9457</p>\n                            </div>\n                            <div className=\"flex items-center mt-auto\">\n                                <a href=\"https://github.com/LefanTan\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <button className=\"w-8 h-8 transition duration-200 text-off-white drop-shadow-sm hover:text-off-white-hover transform active:scale-90 \">\n                                        <AiOutlineGithub className=\"w-full h-full\" />\n                                    </button>\n                                </a>\n                                <a href=\"https://www.linkedin.com/in/lefantan/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <button className=\"ml-3 w-8 h-8 transition duration-200 text-off-white drop-shadow-sm hover:text-off-white-hover transform active:scale-90\">\n                                        <RiLinkedinFill className=\"w-full h-full\" />\n                                    </button>\n                                </a>\n                                <button className=\"text-red text-sm w-fit h-7 ml-auto bg-off-white rounded shadow-md transition duration-200 transform active:scale-90 relative overflow-hidden\">\n                                    <span className=\"ml-2 mr-2 w-full h-full\">Contact Me!</span>\n                                    <animated.div onMouseLeave={() => setSlide({ contact: slideRightVal })} onMouseEnter={() => setSlide({ contact: 0 })} style={{ right: contact} } className=\"w-56 h-full opacity-25 rounded absolute top-0 bg-slide\" />\n                                </button>\n                            </div>\n                        </animated.div>\n                    </Block>\n                    <Block>\n                        <animated.div style={slideOutProps} className=\"bg-dark-green w-full h-full flex flex-col p-4 pl-5 pr-5 shadow-xl\">\n                            <div className=\"relative w-full h-full flex flex-col\">\n                                <h1 className=\"small-light-text text-2xl\">About Me</h1>\n                                <div className=\"flex items-center mt-auto\">\n                                    <button className=\"text-dark-green text-sm w-fit h-full lg:h-7 bg-off-white rounded shadow-md transition duration-200 transform active:scale-90 overflow-hidden\">\n                                        <span className=\"ml-2 mr-2 w-full h-full\">My Resume</span>\n                                        <animated.div onMouseLeave={() => setSlide({ resume: slideRightVal })} onMouseEnter={() => setSlide({ resume: 0 })} style={{ right: resume} } className=\"w-56 h-full opacity-25 rounded absolute top-0 bg-slide\" />\n                                    </button>\n                                    <motion.button onClick={() => directToPage('aboutme')} className=\"transition duration-200 text-off-white ml-auto w-12 h-full lg:h-9 hover:text-off-white-hover\">\n                                        <BsArrowRightShort className=\"w-full h-full\" />\n                                    </motion.button>\n                                </div>\n                            </div>\n                        </animated.div>\n                    </Block>\n                    {!isMobile && (\n                        <Block className=\"bg-transparent shadow-none flex justify-center items-center\">\n                            <animated.img\n                                src={profilePic}\n                                alt=\"Profile Pic\"\n                                className=\"p-10 filter drop-shadow-md\"\n                                style={popOutProps}\n                            />\n                        </Block>\n                    )}\n                    <Block>\n                        <animated.div style={slideOutProps} className=\"bg-off-white w-full h-full flex flex-col p-4 pl-5 pr-5 shadow-xl\">\n                            <div className=\"relative w-full h-full flex flex-col\">\n                                <h1 className=\"small-light-text text-dark-grey text-2xl\">\n                                    Projects I've done\n                                </h1>\n                                <div className=\"flex items-center mt-auto\">\n                                    <button className=\"transition duration-200 text-dark-grey ml-auto w-12 h-full lg:h-9 hover:text-dark-grey-hover\">\n                                        <BsArrowRightShort className=\"w-full h-full\" />\n                                    </button>\n                                </div>\n                            </div>\n                        </animated.div>\n                    </Block>\n                </div>\n            </div>\n        </div>\n    );\n});\n","import React, { useRef } from \"react\";\nimport { AboutMe } from \"./components/AboutMe\";\nimport { StartPage } from \"./components/StartPage\";\n\nfunction App() {\n  const mainRef = useRef<HTMLInputElement | null>(null)\n\n  var prevDeltaX = 0\n  const horizontalScrolling = (e: React.WheelEvent) => {\n    var scrollPosition = mainRef.current?.scrollLeft;\n    // e.deltaX being -0 means it is a scroll wheel (not trackpad)\n    (e.deltaX === 0 && prevDeltaX === 0) && mainRef.current?.scrollTo({\n      top: 0,\n      left: (scrollPosition ?? 0) + e.deltaY * 5,\n      behavior: 'smooth'\n    })\n    prevDeltaX = e.deltaX\n  }\n\n  return (\n    <main ref={mainRef} onWheel={horizontalScrolling} className=\"bg-transparent w-screen h-screen p-0 whitespace-nowrap flex overflow-x-scroll overflow-y-hidden snap snap-x snap-mandatory\">\n      <StartPage className=\"inline-block snap snap-end\" />\n      <AboutMe className=\"inline-block snap snap-end\" />\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}