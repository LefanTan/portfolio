{"version":3,"sources":["components/Hooks.tsx","components/AboutMe.tsx","components/Block.tsx","assets/profilepic.png","components/StartPage.tsx","App.tsx","index.tsx"],"names":["useScrollListener","el","callback","handler","useCallback","window","requestAnimationFrame","setTimeout","console","error","elRect","getBoundingClientRect","left","right","innerWidth","isElementInViewporHorizontal","useEffect","document","querySelector","addEventListener","removeEventListener","AboutMe","memo","className","scrollIntoView","useState","mainDom","setMainDode","transition","setTransState","refHandler","node","behavior","isIn","deepBlueBg","useSpring","background","isMobile","getComputedStyle","body","getPropertyValue","from","transform","config","mass","friction","zIndex","reset","reverse","darkGreyBg","ref","div","style","Block","children","StartPage","onAboutMeClicked","onMyProjectsClicked","setMainDom","transitionState","slideProps","setSlideButton","bgRef","useSpringRef","blueBg","whiteBg","slideOutRef","slideOutProps","bounceButtonProp","duration","delay","loop","useChain","src","profilePic","alt","onMouseLeave","onMouseEnter","button","onClick","App","mainRef","useRef","focusOn","setFocusOn","prevDeltaX","onWheel","e","scrollPosition","current","scrollLeft","deltaX","scrollTo","top","deltaY","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5b2fd6c0.chunk.js","sourcesContent":["import { useCallback, useEffect } from \"react\"\n\nexport function isElementInViewporHorizontal(el : HTMLInputElement | null) : boolean { \n    if(el === null){\n        console.error(`el param is null`)\n        return false\n    }\n    \n    var elRect = el.getBoundingClientRect()\n    return(\n        ((elRect.left <= 0 && elRect.right >= window.innerWidth / 2 && elRect.left >= -window.innerWidth / 2) ||\n         (elRect.left > 0 && elRect.right <= window.innerWidth + window.innerWidth / 2 && elRect.left <= window.innerWidth / 2))\n    )\n}\n\nexport function useScrollListener(el: HTMLInputElement | null, callback : (inElement : boolean) => void) {\n    const handler = useCallback(() => {\n        var scrollCallback = window.requestAnimationFrame || function(callback) {setTimeout(callback, 2000/60)}\n        scrollCallback(() => {\n            // console.log(\"Left \" + el?.getBoundingClientRect().left)\n            // console.log(\"RIGHT \" + el?.getBoundingClientRect().right)\n            return callback(isElementInViewporHorizontal(el))\n        })\n    }, [callback, el])\n\n    useEffect(() => {\n        document.querySelector('main')?.addEventListener('scroll', handler)\n        return(() => {\n            document.querySelector('main')?.removeEventListener('scroll', handler)\n        })\n    }, [handler, el])\n}","import React, { useCallback, useState } from \"react\";\nimport { memo } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport { animated, useSpring } from \"react-spring\";\nimport { useScrollListener } from \"./Hooks\";\nimport { BasicProp } from \"./Interfaces\";\n\nexport const AboutMe = memo(({ className, scrollIntoView }: BasicProp) => {\n\n    const [mainDom, setMainDode] = useState<HTMLInputElement | null>(null)\n    const [transition, setTransState] = useState(false)\n\n    const refHandler = useCallback((node: HTMLInputElement) => {\n        if (node !== null) { \n            setMainDode (node)\n        }\n    }, [])\n\n    if(scrollIntoView && mainDom && !transition) mainDom.scrollIntoView({behavior: 'smooth'})\n    useScrollListener(mainDom, (isIn) => setTransState(isIn))\n\n    const deepBlueBg = useSpring({\n        background: `linear-gradient(${isMobile ? '30deg' : '60deg'}, ${getComputedStyle(document.body).getPropertyValue('--deep-blue-shade')} 50%, transparent 50%)`,\n        from: { transform: `translateX(-18%)` },\n        transform: `translateX(-10%)`,\n        config: { mass: 2, friction: 60 },\n        zIndex: 20,\n        reset: true,\n        reverse: !transition\n    })\n    \n    const darkGreyBg = useSpring({\n        background: `linear-gradient(-20deg, ${getComputedStyle(document.body).getPropertyValue('--red')} 50%, transparent 50%)`,\n        from: { transform: `translateX(40%)` },\n        transform: `translateX(20%)`,\n        config: { mass: 2, friction: 60 },\n        zIndex: 20,\n        reset: true,\n        reverse: !transition\n    })\n\n    return (\n        <div ref={refHandler} className={`${className} bg-transparent`}>\n            <div className=\"bg-transparent w-screen h-screen flex justify-center items-center overflow-hidden relative\">\n                <animated.div style={deepBlueBg} className=\"absolute top-0 bottom-0 -left-1/2 -right-1/2 drop-shadow-lg\" />\n                <animated.div style={darkGreyBg} className=\"absolute top-0 bottom-0 -left-1/2 -right-1/2 drop-shadow-lg\" />\n                <div className=\"w-screen flex justify-center items-center z-50\">\n                    \n                </div>\n            </div>\n        </div>\n    )\n})","import React from \"react\"\nimport { memo } from \"react\"\nimport { BasicProp } from \"./Interfaces\"\n\nexport const Block = memo(({children, className} : BasicProp) => {\n    return(\n        <div className={`${className} bg-transparent w-10/12 h-fit lg:w-2/5 lg:h-2/5 m-3`}>\n          {children}\n        </div>\n    )\n})","export default __webpack_public_path__ + \"static/media/profilepic.788c63e5.png\";","import { Block } from \"./Block\";\nimport { HiMail } from \"react-icons/hi\";\nimport { AiTwotonePhone, AiOutlineGithub } from \"react-icons/ai\";\nimport { RiLinkedinFill } from \"react-icons/ri\";\nimport { MdNavigateNext } from \"react-icons/md\";\nimport profilePic from \"../assets/profilepic.png\";\nimport { isMobile } from \"react-device-detect\";\nimport { BasicProp } from \"./Interfaces\";\nimport { useSpring, animated, useChain, useSpringRef } from \"react-spring\";\nimport React, { memo, useCallback, useState } from \"react\";\nimport { useScrollListener } from \"./Hooks\";\n\ninterface StartPageProp extends BasicProp {\n    onAboutMeClicked?: (event: React.MouseEvent<HTMLElement>) => void\n    onMyProjectsClicked?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nexport const StartPage = memo(({ className, scrollIntoView, onAboutMeClicked, onMyProjectsClicked }: StartPageProp) => {\n\n    const [mainDom, setMainDom] = useState<HTMLInputElement | null>(null)\n    // True means start transition\n    const [transitionState, setTransState] = useState(true)\n\n    // Calls when ref of highest level div changes, so we can pass in the node to useScrollListener\n    const refHandler = useCallback((node: HTMLInputElement) => {\n        if (node !== null) {\n            setMainDom(node)\n        }\n    }, [])\n\n    if (scrollIntoView && mainDom) mainDom.scrollIntoView({ behavior: 'smooth' })\n    useScrollListener(mainDom, (isIn) => setTransState(isIn))\n\n    const slideRightVal = -120\n    const [slideProps, setSlideButton] = useSpring(() => ({\n        background: `linear-gradient(-60deg, black 50%, transparent 50%)`,\n        right: slideRightVal\n    }))\n\n    const bgRef = useSpringRef()\n    const { blueBg, whiteBg } = useSpring({\n        ref: bgRef,\n        from: { blueBg: `translateX(55%)`, whiteBg: `translateX(-10%)` },\n        whiteBg: `translateX(-20%)`,\n        blueBg: `translateX(40%)`,\n        zIndex: 20,\n        config: { mass: 1, friction: 60 },\n        reset: true,\n        reverse: !transitionState\n    })\n\n    const slideOutRef = useSpringRef()\n    const slideOutProps = useSpring({\n        // ref: slideOutRef,\n        // from: {\n        //     clipPath: `inset(0% 100% 0% 0%)`,\n        // },\n        // clipPath: `inset(0% 0% 0% 0%)`,\n        // reset: true,\n        // reverse: !transitionState\n    })\n\n    const bounceButtonProp = useSpring({\n        from: { transform: `translateX(0px)` },\n        transform: `translateX(5px)`,\n        config: { duration: 200 },\n        delay: 200,\n        reset: true,\n        loop: {\n            reverse: true\n        }\n    });\n\n    useChain([slideOutRef, bgRef], [0, 0.5, 0.75])\n\n    return (\n        // Start Scene\n        <div ref={refHandler} className={`${className}`}>\n            <div className=\"bg-transparent w-screen h-screen flex justify-center items-center overflow-hidden relative\">\n                <animated.div style={\n                    { \n                        background: `linear-gradient(${isMobile ? '-30deg' : '-60deg'} , ${getComputedStyle(document.body).getPropertyValue('--deep-blue-shade')} 50%, ${getComputedStyle(document.body).getPropertyValue('--deep-blue')} 50%)` ,\n                        left: `-200%`,\n                        transform: blueBg\n                    }}\n                    className=\"absolute top-0 bottom-0 right-0\" />\n                <animated.div style={\n                    { \n                        background: `linear-gradient(20deg, ${getComputedStyle(document.body).getPropertyValue('--deep-blue-shade2x')} 50%, transparent 50%)`,\n                        transform: whiteBg\n                    }} \n                    className=\"absolute top-0 bottom-0 -left-1/2 -right-1/2\" />\n                <div className=\"bg-transparent w-full h-full lg:w-4/6 p-5 pt-16 pb-16 flex flex-wrap justify-center items-center overflow-hidden z-50\">\n                    {isMobile && (\n                        <Block className=\"bg-transparent shadow-none flex justify-center items-center\">\n                            <img\n                                src={profilePic}\n                                alt=\"Profile Pic\"\n                                className=\"p-8 filter drop-shadow-md\"\n                            />\n                        </Block>\n                    )}\n                    <Block>\n                        <animated.div style={slideOutProps} className=\"bg-red w-full h-full flex flex-col p-4 pl-5 pr-5 shadow-xl\">\n                            <h1 className=\"small-light-text text-2xl mb-2\">\n                                Lefan Tan (Jia Hui)\n                            </h1>\n                            <h2 className=\"small-light-text font-bold\">Front-end Developer</h2>\n                            <div className=\"flex items-center\">\n                                <HiMail className=\"text-off-white mr-2\" />\n                                <p className=\"small-light-text\">lefantan@hotmail.com</p>\n                            </div>\n                            <div className=\"flex items-center\">\n                                <AiTwotonePhone className=\"text-off-white mr-2\" />\n                                <p className=\"small-light-text\">780-604-9457</p>\n                            </div>\n                            <div className=\"flex items-center mt-auto\">\n                                <button className=\"w-8 h-8 transition duration-200 text-off-white drop-shadow-sm hover:text-off-white-hover transform active:scale-90 \">\n                                    <AiOutlineGithub className=\"w-full h-full\" />\n                                </button>\n                                <button className=\"ml-3 w-8 h-8 transition duration-200 text-off-white drop-shadow-sm hover:text-off-white-hover transform active:scale-90\">\n                                    <RiLinkedinFill className=\"w-full h-full\" />\n                                </button>\n                                <button className=\"text-red text-sm w-fit h-7 ml-auto bg-off-white rounded shadow-md transition duration-200 transform active:scale-90 relative overflow-hidden\">\n                                    <span className=\"ml-2 mr-2 w-full h-full\">Contact Me!</span>\n                                    <animated.div onMouseLeave={() => setSlideButton({ right: slideRightVal })} onMouseEnter={() => setSlideButton({ right: 0 })} style={slideProps} className=\"w-56 h-full opacity-25 rounded absolute top-0 right-0\" />\n                                </button>\n                            </div>\n                        </animated.div>\n                    </Block>\n                    <Block>\n                        <animated.div style={slideOutProps} className=\"bg-dark-green w-full h-full flex flex-col p-4 pl-5 pr-5 shadow-xl\">\n                            <div className=\"relative w-full h-full\">\n                                <h1 className=\"small-light-text text-2xl\">About Me</h1>\n                                <animated.button onClick={onAboutMeClicked} style={bounceButtonProp} className=\"transition duration-200 text-off-white absolute bottom-0 -right-2 w-12 h-full lg:h-12 hover:text-off-white-hover\">\n                                    <MdNavigateNext className=\"w-full h-full\" />\n                                </animated.button>\n                            </div>\n                        </animated.div>\n                    </Block>\n                    {!isMobile && (\n                        <Block className=\"bg-transparent shadow-none flex justify-center items-center\">\n                            <img\n                                src={profilePic}\n                                alt=\"Profile Pic\"\n                                className=\"p-10 filter drop-shadow-md\"\n                            />\n                        </Block>\n                    )}\n                    <Block>\n                        <animated.div style={slideOutProps} className=\"bg-off-white w-full h-full flex flex-col p-4 pl-5 pr-5 shadow-xl\">\n                            <div className=\"relative w-full h-full\">\n                                <h1 className=\"small-light-text text-dark-grey text-2xl\">\n                                    Projects I've done\n                                </h1>\n                                <animated.button onClick={onMyProjectsClicked} style={bounceButtonProp} className=\"transition duration-200 text-dark-grey absolute bottom-0 -right-2 w-12 h-full lg:h-12 hover:text-dark-grey-hover\">\n                                    <MdNavigateNext className=\"w-full h-full\" />\n                                </animated.button>\n                            </div>\n                        </animated.div>\n                    </Block>\n                </div>\n            </div>\n        </div>\n    );\n});\n","import React, { useRef, useState } from \"react\";\nimport { AboutMe } from \"./components/AboutMe\";\nimport { StartPage } from \"./components/StartPage\";\n\nfunction App() {\n  const mainRef = useRef<HTMLInputElement | null>(null)\n  const [focusOn, setFocusOn] = useState(\"\")\n\n  var prevDeltaX = 0\n  const horizontalScrolling = (e: React.WheelEvent) => {\n    var scrollPosition = mainRef.current?.scrollLeft;\n    // e.deltaX being -0 means it is a scroll wheel (not trackpad)\n    (e.deltaX === 0 && prevDeltaX === 0) && mainRef.current?.scrollTo({\n      top: 0,\n      left: (scrollPosition ?? 0) + e.deltaY * 5,\n      behavior: 'smooth'\n    })\n    prevDeltaX = e.deltaX\n  }\n\n  return (\n    <main ref={mainRef} onWheel={horizontalScrolling} className=\"bg-transparent w-screen h-screen p-0 whitespace-nowrap flex overflow-x-scroll overflow-y-hidden snap snap-x snap-mandatory\">\n      <StartPage scrollIntoView={focusOn === 'startpage'} onAboutMeClicked={() => { setFocusOn('aboutme'); setTimeout(() => setFocusOn(''), 1) }} className=\"inline-block snap snap-end\" />\n      <AboutMe scrollIntoView={focusOn === 'aboutme'} className=\"inline-block snap snap-end\" />\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}